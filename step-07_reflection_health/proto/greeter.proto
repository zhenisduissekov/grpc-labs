syntax = "proto3";

package greeter;

import "google/protobuf/timestamp.proto";

option go_package = "internal/greeter;greeterpb";

// Greeter service demonstrates gRPC reflection and health checking
service Greeter {
    // Unary RPC
    rpc SayHello(HelloRequest) returns (HelloReply) {}
    
    // Server streaming RPC
    rpc StreamGreetings(HelloRequest) returns (stream HelloReply) {}
    
    // Bidirectional streaming RPC
    rpc Chat(stream HelloRequest) returns (stream HelloReply) {}
}

// The request message containing the user's name.
message HelloRequest {
    string name = 1;
}

// The response message containing the greetings
message HelloReply {
    string message = 1;
    google.protobuf.Timestamp timestamp = 2;
}

// Health check service (will be implemented using the standard health.proto)
// The standard health check service is defined in google.golang.org/grpc/health/grpc_health_v1
// and will be registered programmatically in the server code.
